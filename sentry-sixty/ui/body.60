import { MultilineEdit, FileBox } from "widgets.60";
import { LineEdit } from "sixtyfps_widgets.60";
import { Theme } from "theme.60";

export struct Attachment := {
    name: string,
    contents: string,
}

export Body := VerticalLayout {
    property<string> name;
    property<string> email;
    property<string> comment_text;
    property<string> name_label_text;
    property<string> email_label_text;
    property<string> comment_label_text;
    property<string> comment_placeholder;
    property<string> files_label_text; 
    property<string> show_button_text;
    property<string> hide_button_text;
    property<[Attachment]> attachments;
    // Step 1: attached files. Step 2: Additional feedback.
    property<int> step: 1;
    vertical_stretch: 1;
    padding: 32px;
    spacing: 8px;
    min_height: 560px;

    if (step == 1): VerticalLayout {
        spacing: 8px;
        files_label := Text {
            font_size: 14px;
            font_weight: 400;
            text: root.files_label_text;
        }

        for file[index] in attachments: FileBox {
            vertical_stretch: 0;
            file_name: file.name;
            file_contents: file.contents;
            show_button_text: root.show_button_text;
            hide_button_text: root.hide_button_text;
        }
    }

    if (step == 2): VerticalLayout {
        HorizontalLayout {
            VerticalLayout {
                name_label := Text {
                    font_size: 14px;
                    font_weight: 400;
                    text: root.name_label_text;
                }

                name_box := LineEdit { text <=> root.name; }
            }
 
            VerticalLayout {
                email_label := Text {
                    font_size: 14px;
                    font_weight: 400;
                    text: root.email_label_text;
                }

                email_box := LineEdit { text <=> root.email; }
            }
        }
        comment_label := Text {
            font_size: 14px;
            font_weight: 400;
            text: root.comment_label_text;
        }
        comment_box := LineEdit {
            text <=> root.comment_text;
            placeholder_text: root.comment_placeholder;
        }

    }
    Rectangle {
        vertical_stretch: 1;
    }

}
