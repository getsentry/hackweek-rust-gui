import { Theme } from "theme.60";

export SentryNormalButton := Rectangle {
    callback clicked;
    property<string> text;
    property<bool> pressed: self.enabled && touch_area.pressed;
    property<bool> enabled <=> touch_area.enabled;

    border_width: 1px;
    border_radius: 4px;
    border_color: self.pressed ? Theme.outline_active : (touch_area.has_hover ? Theme.outline_hover : Theme.outline_default);
    background: white;

    animate background { duration: 100ms; }
    horizontal-stretch: 0;
    vertical-stretch: 0;

    HorizontalLayout {
        padding-top: 12px;
        padding-bottom: 12px;
        padding-left: 16px;
        padding-right: 16px;

        Text {
            text: root.text;
            font-weight: 600;
            font-size: 14px;
            horizontal-alignment: center;
            vertical-alignment: center;
        }
    }

    touch_area := TouchArea {
        width: root.width;
        height: root.height;
        clicked => {
            root.clicked();
        }
    }
}

export SentryAccentButton := Rectangle {
    callback clicked;
    property<string> text;
    property<bool> pressed: self.enabled && touch_area.pressed;
    property<bool> enabled <=> touch_area.enabled;

    border_width: 1px;
    border_radius: 4px;
    border_color: self.pressed ? Theme.outline_active : (touch_area.has_hover ? Theme.outline_hover : Theme.outline_default);
    background: self.pressed ? Theme.accent_active : (touch_area.has_hover ? Theme.accent_hover : Theme.accent_default);

    animate background { duration: 100ms; }
    horizontal-stretch: 0;
    vertical-stretch: 0;

    HorizontalLayout {
        padding-top: 12px;
        padding-bottom: 12px;
        padding-left: 16px;
        padding-right: 16px;

        Text {
            text: root.text;
            font-weight: 600;
            font-size: 14px;
            color: white;
            horizontal-alignment: center;
            vertical-alignment: center;
        }
    }

    touch_area := TouchArea {
        width: root.width;
        height: root.height;
        clicked => {
            root.clicked();
        }
    }
}
